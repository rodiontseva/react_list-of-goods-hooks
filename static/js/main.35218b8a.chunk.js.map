{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","Button","variant","size","type","onClick","color","List","map","good","ListItem","disablePadding","ListItemText","primary","Divider","ReactDOM","render","document","getElementById"],"mappings":"6KAsBKA,E,+FAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BR,SACEC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAEzB,OAAQH,GACN,KAAKT,EAASa,QACZF,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKhB,EAASkB,OACZP,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAE3D,KAAKnB,EAASQ,MAShB,OAJIF,GACFK,EAAaS,UAGRT,EAQcU,CACnBpB,EAAiBQ,EAAUH,GAG7B,OACE,sBAAKgB,UAAU,MAAf,UACGlB,GACC,mCACE,cAACmB,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAK,QACLC,KAAK,SACLC,QAAS,kBAAMtB,GAAW,IAJ5B,sBAWFD,GACA,qCACE,sBAAKkB,UAAU,UAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAsB,IAAbf,EACL,YACA,WACJiB,KAAK,SACLD,KAAK,QACLE,QAAS,kBAAMjB,EAAYV,EAASa,UANtC,iCAWA,cAACU,EAAA,EAAD,CACEC,QAAsB,IAAbf,EACL,YACA,WACJiB,KAAK,SACLC,QAAS,kBAAMjB,EAAYV,EAASkB,SALtC,4BAUA,cAACK,EAAA,EAAD,CACEC,QAASlB,EACL,YACA,WACJoB,KAAK,SACLD,KAAK,QACLE,QAAS,kBAAMpB,GAAaD,IAN9B,qBAWA,cAACiB,EAAA,EAAD,CACEC,QAAQ,WACRI,MAAM,UACNF,KAAK,SACLD,KAAK,QACLE,QAAS,WACPjB,EAAYV,EAASQ,MACrBD,GAAY,IAPhB,sBAcF,cAACsB,EAAA,EAAD,CAAMP,UAAU,QAAhB,SACGX,EAAamB,KAAI,SAAAC,GAAI,OACpB,qCACE,cAACC,EAAA,EAAD,CACEC,gBAAc,EAEdX,UAAU,cAHZ,SAKE,cAACY,EAAA,EAAD,CACEC,QAASJ,KAJNA,GAOP,cAACK,EAAA,EAAD,mBCxIhBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35218b8a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(true);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer, sortType, isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {isStarted && (\n        <>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            type=\"button\"\n            onClick={() => setStarted(false)}\n          >\n            Start\n          </Button>\n        </>\n      )}\n\n      {!isStarted && (\n        <>\n          <div className=\"Buttons\">\n            <Button\n              variant={sortType === 1\n                ? 'contained'\n                : 'outlined'}\n              type=\"button\"\n              size=\"small\"\n              onClick={() => setSortType(SortType.ALPABET)}\n            >\n              Sort alphabetically\n            </Button>\n\n            <Button\n              variant={sortType === 2\n                ? 'contained'\n                : 'outlined'}\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </Button>\n\n            <Button\n              variant={isReversed\n                ? 'contained'\n                : 'outlined'}\n              type=\"button\"\n              size=\"small\"\n              onClick={() => setReversed(!isReversed)}\n            >\n              Reverse\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              color=\"warning\"\n              type=\"button\"\n              size=\"small\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReversed(false);\n              }}\n            >\n              Reset\n            </Button>\n          </div>\n\n          <List className=\"Goods\">\n            {visibleGoods.map(good => (\n              <>\n                <ListItem\n                  disablePadding\n                  key={good}\n                  className=\"Goods__item\"\n                >\n                  <ListItemText\n                    primary={good}\n                  />\n                </ListItem>\n                <Divider />\n              </>\n            ))}\n          </List>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}